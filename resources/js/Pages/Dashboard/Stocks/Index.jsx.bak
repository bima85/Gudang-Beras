// BACKUP FILE
// =============================
// File: Index.jsx
// Backup dibuat otomatis sebelum perubahan dropdown stok per tanggal

import React, { useState } from "react";
import DashboardLayout from "@/Layouts/DashboardLayout";
import { Head, usePage, router } from "@inertiajs/react";
import Button from "@/Components/Dashboard/Button";
import InputSelect from "@/Components/Dashboard/InputSelect";
import DataTable from "react-data-table-component";

export default function Index({
    stocks,
    products = [],
    filterProduct = null,
    startDate = "",
    endDate = "",
}) {
    const { flash } = usePage().props;
    const [selectedProduct, setSelectedProduct] = useState(
        products.find((p) => p.id === Number(filterProduct)) || null
    );
    const [start, setStart] = useState(startDate || "");
    const [end, setEnd] = useState(endDate || "");

    // Ambil semua data (tanpa paginate) untuk DataTable client-side
    const allStocks = stocks.data || stocks;

    const handleDelete = (productId) => {
        if (confirm("Yakin ingin menghapus SEMUA stok untuk produk ini?")) {
            router.delete(route("stocks.deleteByProduct", productId), {
                onSuccess: () => {
                    // Notifikasi bisa pakai react-hot-toast jika sudah ada
                },
            });
        }
    };

    // Group stocks by purchase_date
    const groupedStocks = stocks.reduce((acc, stock) => {
        const date = stock.purchase_date || "-";
        if (!acc[date]) acc[date] = [];
        acc[date].push(stock);
        return acc;
    }, {});
    const dateList = Object.keys(groupedStocks);

    const [expandedDate, setExpandedDate] = useState(null);

    const columns = [
        {
            name: "No",
            selector: (row, i) => i + 1,
            width: "60px",
        },
        {
            name: "Tanggal",
            selector: (row) =>
                row.purchase_date
                    ? new Date(row.purchase_date).toLocaleDateString("id-ID")
                    : "-",
            width: "110px",
        },
        {
            name: "Barcode",
            selector: (row) => row.product?.barcode || "-",
            width: "120px",
        },
        {
            name: "Kategori",
            selector: (row) => row.category?.name || "-",
            sortable: true,
            width: "120px",
        },
        {
            name: "Produk",
            selector: (row) => row.product?.name,
            sortable: true,
        },
        {
            name: "Deskripsi",
            selector: (row) => row.product?.description || "-",
            width: "180px",
        },
        {
            name: "Min Stok",
            selector: (row) => row.product?.min_stock || "-",
            width: "80px",
        },
        {
            name: "Stok Ton",
            selector: (row) => row.stok_ton ?? 0,
            width: "80px",
        },
        {
            name: "Stok Sak",
            selector: (row) => row.stok_sak ?? 0,
            width: "80px",
        },
        {
            name: "Stok Kg",
            selector: (row) => row.stok_kg ?? 0,
            width: "80px",
        },
        {
            name: "Aksi",
            cell: (row) => (
                <Button
                    type="button"
                    label="Hapus"
                    onClick={() => handleDelete(row.product.id)}
                    className="bg-red-500 hover:bg-red-600 text-white px-2 py-0.5 rounded text-xs min-w-[40px] h-7 flex items-center justify-center"
                    style={{ minWidth: 40, height: 28, padding: 0 }}
                />
            ),
            ignoreRowClick: true,
            width: "80px",
        },
    ];

    const handleFilter = () => {
        router.get(
            route("stocks.index"),
            {
                ...(selectedProduct ? { product_id: selectedProduct.id } : {}),
                ...(start ? { start_date: start } : {}),
                ...(end ? { end_date: end } : {}),
            },
            { preserveState: true, replace: true }
        );
    };

    return (
        <>
            <Head title="Stok" />
            <div className="mb-4 bg-gray-100 dark:bg-gray-900 p-4 rounded-lg flex flex-col md:flex-row md:items-end md:justify-between gap-4 shadow-sm">
                <div className="flex-1 flex flex-col md:flex-row md:items-end gap-2 md:gap-4">
                    <div className="w-full md:w-44 flex flex-col gap-1">
                        <label className="text-xs font-semibold text-gray-600 dark:text-gray-300 mb-1 ml-1">
                            Tanggal Awal
                        </label>
                        <input
                            type="date"
                            value={start}
                            onChange={(e) => setStart(e.target.value)}
                            className="w-full px-3 py-1.5 border text-sm rounded-md bg-white text-gray-700 border-gray-200 focus:outline-none focus:border-gray-300 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-800 dark:focus:border-gray-700"
                        />
                    </div>
                    <div className="w-full md:w-44 flex flex-col gap-1">
                        <label className="text-xs font-semibold text-gray-600 dark:text-gray-300 mb-1 ml-1">
                            Tanggal Akhir
                        </label>
                        <input
                            type="date"
                            value={end}
                            onChange={(e) => setEnd(e.target.value)}
                            className="w-full px-3 py-1.5 border text-sm rounded-md bg-white text-gray-700 border-gray-200 focus:outline-none focus:border-gray-300 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-800 dark:focus:border-gray-700"
                        />
                    </div>
                    <div className="w-full md:w-72 flex flex-col gap-1">
                        <label className="text-xs font-semibold text-gray-600 dark:text-gray-300 mb-1 ml-1">
                            Produk
                        </label>
                        <InputSelect
                            label={null}
                            data={products}
                            selected={selectedProduct}
                            setSelected={setSelectedProduct}
                            placeholder="Pilih Produk"
                            displayKey="name"
                            searchable
                        />
                    </div>
                </div>
                <div className="flex flex-col md:flex-row gap-2 md:gap-2 w-full md:w-auto">
                    <Button
                        type="button"
                        label="Filter"
                        onClick={handleFilter}
                        className="border bg-blue-600 text-white hover:bg-blue-700 dark:bg-blue-800 dark:border-blue-800 dark:text-white dark:hover:bg-blue-900 px-6 w-full md:w-auto"
                    />
                    <Button
                        type="link"
                        label="Tambah Stok"
                        href={route("stocks.create")}
                        className="border bg-white text-gray-700 hover:bg-gray-100 dark:bg-gray-950 dark:border-gray-800 dark:text-gray-200 dark:hover:bg-gray-900 px-6 w-full md:w-auto"
                    />
                </div>
            </div>
            {flash && flash.success && (
                <div className="mb-2 p-2 bg-green-100 text-green-700 rounded">
                    {flash.success}
                </div>
            )}
            <div className="bg-white dark:bg-gray-950 rounded-lg shadow border dark:border-gray-900 p-2">
                <table className="w-full text-sm">
                    <thead>
                        <tr>
                            <th className="px-2 py-2">Tanggal</th>
                            <th className="px-2 py-2">Aksi</th>
                        </tr>
                    </thead>
                    <tbody>
                        {dateList.length === 0 && (
                            <tr>
                                <td
                                    colSpan={2}
                                    className="text-center text-gray-500 py-4"
                                >
                                    Data stok belum ada.
                                </td>
                            </tr>
                        )}
                        {dateList.map((date, idx) => (
                            <React.Fragment key={date}>
                                <tr className="bg-gray-100 dark:bg-gray-800">
                                    <td
                                        className="px-2 py-2 font-semibold cursor-pointer"
                                        onClick={() =>
                                            setExpandedDate(
                                                expandedDate === date
                                                    ? null
                                                    : date
                                            )
                                        }
                                    >
                                        <span className="mr-2">
                                            {expandedDate === date ? "▼" : "►"}
                                        </span>
                                        {date === "-"
                                            ? "Tanpa Tanggal"
                                            : new Date(date).toLocaleDateString(
                                                  "id-ID"
                                              )}
                                    </td>
                                    <td className="px-2 py-2">
                                        <Button
                                            type="button"
                                            label={
                                                expandedDate === date
                                                    ? "Tutup"
                                                    : "Lihat Detail"
                                            }
                                            onClick={() =>
                                                setExpandedDate(
                                                    expandedDate === date
                                                        ? null
                                                        : date
                                                )
                                            }
                                            className="bg-blue-600 text-white px-3 py-1 rounded text-xs"
                                        />
                                    </td>
                                </tr>
                                {expandedDate === date && (
                                    <tr>
                                        <td
                                            colSpan={2}
                                            className="bg-white dark:bg-gray-900"
                                        >
                                            <table className="w-full text-xs border">
                                                <thead>
                                                    <tr>
                                                        <th className="px-2 py-1">
                                                            No
                                                        </th>
                                                        <th className="px-2 py-1">
                                                            Barcode
                                                        </th>
                                                        <th className="px-2 py-1">
                                                            Kategori
                                                        </th>
                                                        <th className="px-2 py-1">
                                                            Produk
                                                        </th>
                                                        <th className="px-2 py-1">
                                                            Deskripsi
                                                        </th>
                                                        <th className="px-2 py-1">
                                                            Min Stok
                                                        </th>
                                                        <th className="px-2 py-1">
                                                            Stok Ton
                                                        </th>
                                                        <th className="px-2 py-1">
                                                            Stok Sak
                                                        </th>
                                                        <th className="px-2 py-1">
                                                            Stok Kg
                                                        </th>
                                                        <th className="px-2 py-1">
                                                            Aksi
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    {groupedStocks[date].map(
                                                        (row, i) => (
                                                            <tr
                                                                key={
                                                                    row.id || i
                                                                }
                                                            >
                                                                <td className="px-2 py-1">
                                                                    {i + 1}
                                                                </td>
                                                                <td className="px-2 py-1">
                                                                    {row.product
                                                                        ?.barcode ||
                                                                        "-"}
                                                                </td>
                                                                <td className="px-2 py-1">
                                                                    {row
                                                                        .category
                                                                        ?.name ||
                                                                        "-"}
                                                                </td>
                                                                <td className="px-2 py-1">
                                                                    {row.product
                                                                        ?.name ||
                                                                        "-"}
                                                                </td>
                                                                <td className="px-2 py-1">
                                                                    {row.product
                                                                        ?.description ||
                                                                        "-"}
                                                                </td>
                                                                <td className="px-2 py-1">
                                                                    {row.product
                                                                        ?.min_stock ||
                                                                        "-"}
                                                                </td>
                                                                <td className="px-2 py-1">
                                                                    {row.unit_id ===
                                                                    3
                                                                        ? row.qty
                                                                        : 0}
                                                                </td>
                                                                <td className="px-2 py-1">
                                                                    {row.unit_id ===
                                                                    2
                                                                        ? row.qty
                                                                        : 0}
                                                                </td>
                                                                <td className="px-2 py-1">
                                                                    {row.unit_id ===
                                                                    1
                                                                        ? row.qty
                                                                        : 0}
                                                                </td>
                                                                <td className="px-2 py-1">
                                                                    <Button
                                                                        type="button"
                                                                        label="Hapus"
                                                                        onClick={() =>
                                                                            handleDelete(
                                                                                row
                                                                                    .product
                                                                                    ?.id
                                                                            )
                                                                        }
                                                                        className="bg-red-500 hover:bg-red-600 text-white px-2 py-0.5 rounded text-xs min-w-[40px] h-7 flex items-center justify-center"
                                                                        style={{
                                                                            minWidth: 40,
                                                                            height: 28,
                                                                            padding: 0,
                                                                        }}
                                                                    />
                                                                </td>
                                                            </tr>
                                                        )
                                                    )}
                                                </tbody>
                                            </table>
                                        </td>
                                    </tr>
                                )}
                            </React.Fragment>
                        ))}
                    </tbody>
                </table>
            </div>
        </>
    );
}

Index.layout = (page) => <DashboardLayout children={page} />;

